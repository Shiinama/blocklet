{
  "version": 3,
  "sources": ["../../../../../node_modules/.pnpm/zustand@4.5.0_@types+react@18.2.48_react@18.2.0/node_modules/zustand/esm/shallow.mjs", "../../../../../node_modules/.pnpm/zustand-computed@1.3.7_react@18.2.0_zustand@4.5.0/node_modules/zustand-computed/dist/mjs/computed.js"],
  "sourcesContent": ["function shallow$1(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n  if (objA instanceof Map && objB instanceof Map) {\n    if (objA.size !== objB.size)\n      return false;\n    for (const [key, value] of objA) {\n      if (!Object.is(value, objB.get(key))) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (objA instanceof Set && objB instanceof Set) {\n    if (objA.size !== objB.size)\n      return false;\n    for (const value of objA) {\n      if (!objB.has(value)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvar shallow = (objA, objB) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { shallow } from 'zustand/shallow'`.\"\n    );\n  }\n  return shallow$1(objA, objB);\n};\n\nexport { shallow as default, shallow$1 as shallow };\n", "import { shallow } from \"zustand/shallow\";\nconst computedImpl = (f, compute, opts) => {\n    // set of keys that have been accessed in any compute call\n    const trackedSelectors = new Set();\n    return (set, get, api) => {\n        const equalityFn = opts?.equalityFn ?? shallow;\n        if (opts?.keys) {\n            const selectorKeys = opts.keys;\n            selectorKeys.forEach((key) => trackedSelectors.add(key));\n        }\n        // we track which selectors are accessed\n        const useSelectors = opts?.disableProxy !== true || !!opts?.keys;\n        const useProxy = opts?.disableProxy !== true && !opts?.keys;\n        const computeAndMerge = (state) => {\n            // create a Proxy to track which selectors are accessed\n            const stateProxy = new Proxy({ ...state }, {\n                get: (_, prop) => {\n                    trackedSelectors.add(prop);\n                    return state[prop];\n                },\n            });\n            // calculate the new computed state\n            const computedState = compute(useProxy ? stateProxy : { ...state });\n            // if part of the computed state did not change according to the equalityFn\n            // then we use the object ref from the previous state. This is to prevent\n            // unnecessary re-renders.\n            for (const k of Object.keys(computedState)) {\n                if (equalityFn(computedState[k], state[k])) {\n                    computedState[k] = state[k];\n                }\n            }\n            return { ...state, ...computedState };\n        };\n        // higher level function to handle compute & compare overhead\n        const setWithComputed = (update, replace, ...args) => {\n            ;\n            set((state) => {\n                const updated = typeof update === \"object\" ? update : update(state);\n                if (useSelectors && trackedSelectors.size !== 0 && !Object.keys(updated).some((k) => trackedSelectors.has(k))) {\n                    // if we have a selector set, but none of the updated keys are in the selector set, then we can skip the compute\n                    return { ...state, ...updated };\n                }\n                return computeAndMerge({ ...state, ...updated });\n            }, replace, ...args);\n        };\n        const _api = api;\n        _api.setState = setWithComputed;\n        const st = f(setWithComputed, get, _api);\n        return Object.assign({}, st, compute(st));\n    };\n};\nexport const computed = computedImpl;\nexport default computed;\n"],
  "mappings": "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",
  "names": []
}
